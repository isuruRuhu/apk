/*
 * Copyright (c) 2023, WSO2 LLC. (https://www.wso2.com) All Rights Reserved.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License"); 
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software 
 * distributed under the License is distributed on an "AS IS" BASIS, 
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
 * See the License for the specific language governing permissions and 
 * limitations under the License.
 *
 */

plugins {
    id 'net.researchgate.release' version '2.8.0'
}

apply from: "$rootDir/../../common-gradle-scripts/go.gradle"

allprojects {
    group = project.group
    version = project.version
}

tasks.register('cluster_setup', Exec).configure { 
    group 'integration'
    description 'Sets up a kind cluster'
    commandLine 'sh', "$rootDir/scripts/cluster-setup.sh"
}

tasks.register('cluster_cleanup', Exec).configure { 
    group 'integration'
    description 'Cleans up the kind cluster'
    commandLine 'sh', "$rootDir/scripts/cluster-cleanup.sh"
}

tasks.register('integration_test', Exec) {
    group 'integration'
    description 'Runs integration tests'
    commandLine 'sh', "$rootDir/scripts/run-tests.sh"
}

tasks.register('go_test', Exec) {
    group 'go'
    description 'Automates testing the packages named by the import paths.'
    commandLine 'sh', '-c', "go test -race -covermode=atomic ./integration/..."
}

tasks.named('go_revive_run').configure { 
    finalizedBy go_tidy
    finalizedBy go_test
}

tasks.named('integration_test').configure { 
    dependsOn cluster_setup
    finalizedBy cluster_cleanup
}

tasks.named('cluster_setup').configure { 
    dependsOn go_revive_run
}

task build{
    dependsOn integration_test
}
